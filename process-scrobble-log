#!/usr/bin/env bash
#
# Retrieve, process & submit a Rockbox Last.fm scrobble log.
#
# Note: Last.fm will only accept a log if at least 1 song was fully
#       listened to (L). It does not record skipped (S) songs.
#

set -e

log=".scrobbler.log"

device="/dev/disk/by-uuid/D057-2F0C"
mount="/mnt/mp3"
scrobbledir="$HOME/.mp3scrobbles"

mount_device() {
    # try to mount device
    sudo mount "$device" "$mount" -o uid=$UID,gid=$UID

    # tell how it went
    if [[ $? == 0 ]]; then
        echo "${0##*/}: mounted succesfully"
    else
        echo "${0##*/}: error: could not mount device $device at mount point $mount"
        exit 2
    fi
}

unmount_device() {
    # try to unmount device
    sudo umount "$device"

    # tell how it went
    if [[ $? == 0 ]]; then
        echo "${0##*/}: unmounted successfully"
    else
        echo "${0##*/}: error: could not unmount $device"
        exit 3
    fi
}

# if device not present, exit
if [[ ! -e "$device" ]]; then
    echo "${0##*/}: error: device not present"
    exit 1
fi

# mount device
echo "${0##*/}: device found, mounting..."
mount_device

if [[ -f "$mount/$log" ]]; then
    # make a temporary directory for the log, so that it's not lost if
    # something breaks
    newdir="$scrobbledir/$(date "+%Y-%m-%d")-scrobbler-log"
    mkdir "$newdir"
    mv "$mount/$log" "$newdir"

    # unmount as soon as possible
    unmount_device

    # view (& edit) the log (e.g. to delete entries of podcasts)
    # not really sure if it's useful
    #vim "$newdir/$log"

    # submit tracks
    # qtscrob takes it upon itself to delete the file itself, the dirty
    # program >:(
    qtscrob-cli --file --location "$newdir"

    # delete temporary directory
    rm -rf "$newdir"
else
    echo "${0##*/}: no scrobbler log present"
    unmount_device
    exit 0
fi
